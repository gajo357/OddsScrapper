xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90)
?coord_trans
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friend_count), data = subset(pf, !is.na(pf$friend_count))) +
geom_jitter(alpha = 1/20) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friend_count), data = subset(pf, !is.na(pf$friend_count))) +
geom_jitter(alpha = 1/20) +
xlim(13, 90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13, 90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20, position = position_jitter(height = 0)) +
xlim(13, 90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20) +
xlim(13, 90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_jitter(alpha = 1/20, position = position_jitter(height = 0)) +
xlim(13, 90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_jitter(alpha = 1/20, position = position_jitter(height = 0)) +
xlim(13, 90) +
coord_trans(y = "log10")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point() +
xlim(13, 90) +
coord_trans(y = "log10")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_jitter(alpha = 1/20, position = position_jitter(height = 0)) +
xlim(13, 90) +
coord_trans(y = "log10")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_jitter(alpha = 1/20, position = position_jitter(height = 0)) +
xlim(13, 90) +
coord_trans(y = "sqrt")
library(dplyr)
install.packages('dplyr')
library(dplyr)
age_Groups = group_by(pf, age)
pf.fc_by_age = summarise(age_Groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age = arrange(pf.fc_by_age, age)
head(pf.fc_by_age)
pf.fc_by_age <- pf %.%
group_by(age) %.%
summarise(age_Groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %.%
arrange(age)
pf.fc_by_age <- pf %.%
group_by(age) %.%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %.%
arrange(age)
?%.%
?%
pf.fc_by_age <- pf %>%
group_by(age) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
head(pf.fc_by_age, 20)
head(pf.fc_by_age, 20)
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) +
geom_line()
ggplot(aes(age, friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, probs = .1)
ggplot(aes(age, friend_count), data = pf) +
coord_cartesian(xlim = c(13, 90)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1))
ggplot(aes(age, friend_count), data = pf) +
coord_cartesian(xlim = c(13, 90)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue')
ggplot(aes(age, friend_count), data = pf) +
coord_cartesian(xlim = c(13, 90)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue')
ggplot(aes(age, friend_count), data = pf) +
coord_cartesian(xlim = c(13, 90)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue')
ggplot(aes(age, friend_count), data = pf) +
coord_cartesian(xlim = c(13, 90)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue')
ggplot(aes(age, friend_count), data = pf) +
coord_cartesian(xlim = c(13, 30)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue')
ggplot(aes(age, friend_count), data = pf) +
coord_cartesian(xlim = c(13, 70), ylim = c(0, 1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue')
?r
?rho
?cor.test
cor.test(x = age, y = friend_count, data = pf)
cor.test(x = pf$age, y = pf$friend_count)
with(pf, cor.test(x = age, y = friend_count))
with(subset(pf, age <= 70), cor.test(age, friend_count))
ggplot(aes(www_likes_received, likes_received), data = pf) +
geom_point()
ggplot(aes(www_likes_received, likes_received), data = pf) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, .95)) +
xlim(0, quantile(pf$likes_received, .95))
ggplot(aes(www_likes_received, likes_received), data = pf) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, .95)) +
ylim(0, quantile(pf$likes_received, .95))
ggplot(aes(www_likes_received, likes_received), data = pf) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, .95)) +
ylim(0, quantile(pf$likes_received, 0.95)) +
geom_smooth(method = 'lm', color = 'red')
with(pf, cor.test(www_likes_received, likes_received))
install.packages('alr3')
library(alr3)
data("Mitchell")
ggplot(aes(temperature, months), data = Mitchell) +
geom_point()
ggplot(aes(Temp, Month), data = Mitchell) +
geom_point()
with(Mitchell, cor.test(Month, Temp))
ggplot(data = Mitchell, aes(Month, Temp)) +
geom_point() +
scale_x_continuous(breaks = seq(0, 220, 12))
ggplot(data = Mitchell, aes(Month, Temp)) +
geom_line() +
scale_x_continuous(breaks = seq(0, 203, 12))
ggplot(data = pf.fc_by_age, aes(age, friend_count_mean)) +
geom_line()
pf$age_with_months <- pf$age + (12 - pf$dob_month)/12
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
head(pf.fc_by_age_months, 20)
ggplot(data = subset(pf.fc_by_age_months, age_with_months < 71),
aes(age_with_months, friend_count_mean)) +
geom_line()
library(gridExtra)
p1 <- ggplot(data = subset(pf.fc_by_age, age < 71),
aes(age, friend_count_mean)) +
geom_line() +
geom_smooth()
p2 <- ggplot(data = subset(pf.fc_by_age_months, age_with_months < 71),
aes(age_with_months, friend_count_mean)) +
geom_line() +
geom_smooth()
p3 <- ggplot(data = subset(pf, age < 71),
aes(round(age/5) * 5, friend_count)) +
geom_line(stat = 'summary', fun.y = mean)
library(gridExtra)
grid.arrange(p1, p2, p3, ncol = 1)
load(diamonds)
?diamonds
data("diamonds")
library(ggplot2)
data("diamonds")
summary(diamonds)
ggplot(data = diamonds, aes(x, price))
ggplot(data = diamonds, aes(x, price)) +
geom_point()
cor.test(x, price)
with(diamonds, cor.test(x, price))
with(diamonds, cor.test(y, price))
with(diamonds, cor.test(z, price))
ggplot(data = diamonds, aes(depth, price)) +
geom_point()
ggplot(data = diamonds, aes(depth, price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(0, 80, 2))
with(diamonds, cor.test(depth, price))
ggplot(data = diamonds, aes(carat, price)) +
geom_point() +
xlim(0.2, .9*5.01) +
ylim(326, .9*18823)
ggplot(data = diamonds, aes(carat, price)) +
geom_point() +
xlim(0, quantile(diamonds$carat, .99)) +
ylim(0, quantile(diamonds$price, .99))
diamonds$volume <- with(diamonds, x*y*z)
3.95*3.98*2.43
3.89*3.84*2.31
ggplot(data = diamonds, aes(volume, price)) +
geom_point()
count(diamonds$volume == 0)
library(dplyr)
count(diamonds$volume == 0)
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
library(plyr)
count(diamonds$volume == 0)
detach("package:plyr", unload=TRUE)
length(diamonds$volume == 0)
length(which(diamonds$volume == 0))
with(subset(diamonds, volume > 0 & volume <= 800), cor.test(volume, price))
ggplot(subset(diamonds, volume > 0 & volume <= 800),
aes(volume, price)) +
geom_point(alpha = 1/100) +
geom_smooth(method = 'lm', color = 'red')
library(ggplot2)
ggplot(subset(diamonds, volume > 0 & volume <= 800),
aes(volume, price)) +
geom_point(alpha = 1/100) +
geom_smooth(method = 'lm', color = 'red')
library(dplyr)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(clarity)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
p1 <- ggplot(data = diamonds_mp_by_clarity,
aes(clarity, mean_price)) +
geom_bar()
p2 <- ggplot(data = diamonds_mp_by_color,
aes(color, mean_price)) +
geom_bar()
grid.arrange(p1, p2, ncol = 1)
ggplot(data = diamonds_mp_by_clarity,
aes(clarity, mean_price)) +
geom_bar()
ggplot(data = diamonds_mp_by_color,
+              aes(color, mean_price)) +
+   geom_bar()
ggplot(data = diamonds_mp_by_color,
aes(color, mean_price)) +
geom_bar()
p1 <- ggplot(data = diamonds_mp_by_clarity,
aes(clarity, mean_price)) +
geom_bar(stat="identity")
p2 <- ggplot(data = diamonds_mp_by_color,
aes(color, mean_price)) +
geom_bar(stat="identity")
grid.arrange(p1, p2, ncol = 1)
library(ggplot2)
library(dplyr)
setwd("C:/Users/Gajo/Documents/Visual Studio 2017/Projects/OddsScrapper/OddsScraper.Analysis")
data <- read.csv("soccer_england_premier-league.csv")
data$HomeOdd <- 1/data$HomeOdd
data$DrawOdd <- 1/data$DrawOdd
data$AwayOdd <- 1/data$AwayOdd
data$Date <- as.POSIXct(data$Date, format = "%m/%d/%Y %H:%M:%S")
data$IsValid <- as.logical(data$IsValid)
data$IsPlayoffs <- as.logical(data$IsPlayoffs)
data$IsOvertime <- as.logical(data$IsOvertime)
data$TotalGoals <- with(data, HomeTeamScore + AwayTeamScore)
data$HomeCut <- cut(data$HomeOdd,
breaks = seq(0, 1, .05),
right = TRUE)
data$DrawCut <- cut(data$DrawOdd,
breaks = seq(0, 1, .05),
right = TRUE)
data$AwayCut <- cut(data$AwayOdd,
breaks = seq(0, 1, .05),
right = TRUE)
summary(data)
1/0.009901
summary(subset(data, Bookmaker == "bet365"))
dataByGame <- data %>%
subset(IsValid) %>%
group_by(HomeTeam, AwayTeam, Date, Season, HomeTeamScore, AwayTeamScore) %>%
summarise(HomeOddMean = mean(HomeOdd),
DrawOddMean = mean(DrawOdd),
AwayOddMean = mean(AwayOdd),
HomeOddMedian = median(HomeOdd),
DrawOddMedian = median(DrawOdd),
AwayOddMedian = median(AwayOdd),
HomeOddDiff = max(HomeOdd) - min(HomeOdd),
DrawOddDiff = max(DrawOdd) - min(DrawOdd),
AwayOddDiff = max(AwayOdd) - min(AwayOdd),
HomeWin = min(HomeTeamScore) > min(AwayTeamScore),
DrawWin = min(HomeTeamScore) == min(AwayTeamScore),
AwayWin = min(HomeTeamScore) < min(AwayTeamScore),
n = n()) %>%
arrange(Date)
dataByGame$HomeCut <- cut(dataByGame$HomeOddMean,
breaks = seq(0, 1, .1),
right = TRUE)
dataByGame$DrawCut <- cut(dataByGame$DrawOddMean,
breaks = seq(0, 1, .1),
right = TRUE)
dataByGame$AwayCut <- cut(dataByGame$AwayOddMean,
breaks = seq(0, 1, .1),
right = TRUE)
ggplot(dataByGame,
aes(DrawOddMean, DrawOddDiff)) +
geom_point(alpha = 1/20) +
facet_wrap(~Season)
ggplot(dataByGame,
aes(DrawOddMean, HomeOddMean)) +
geom_point(alpha = 1/20) +
facet_wrap(~Season)
lm(dataByGame$DrawOddMean ~ poly(dataByGame$HomeOddMean, 3))
lm(dataByGame$DrawOddMean ~ poly(dataByGame$HomeOddMean, 3, raw = TRUE))
fit3 <- lm(dataByGame$DrawOddMean ~ poly(dataByGame$HomeOddMean, 3, raw = TRUE))
xx <- seq(0, 1, length.out=250)
lines(xx, predict(fit3, data.frame(x=xx)), col='red')
fit3 <- lm(dataByGame$DrawOddMean ~ poly(dataByGame$HomeOddMean, 3))
lines(xx, predict(fit3, data.frame(x=xx)), col='red')
predict(fit3, data.frame(x=xx))
?predict
predict.lm(fit3, data.frame(x=xx))
x <- 1:10
y <- x + c(-0.5,0.5)
plot(x,y, xlim=c(0,11), ylim=c(-1,12))
fit4 <- lm( y~poly(x,3) )
xx <- seq(0,11, length.out=250)
lines(xx, predict(fit4, data.frame(x=xx)), col='purple')
predict(fit4, data.frame(x=xx))
pre <- predict(fit4, data.frame(x=xx))
fit3 <- with(subset(dataByGame, Bookmaker == "bet365"), lm(DrawOddMean ~ poly(HomeOddMean, 3)))
fit3 <- with(subset(data, Bookmaker == "bet365"), lm(DrawOdd ~ poly(HomeOdd, 3)))
lines(data$HomeOdd, predict(fit3, data.frame(x=data$HomeOdd)), col='red')
fit <- data.frame(x=data$HomeOdd)
fit <- predict(fit3, data.frame(x=data$HomeOdd)
)
lines(bet365$HomeOdd, predict(fit3, data.frame(x=data$HomeOdd)), col='red')
lines(subset(data, Bookmaker == "bet365")$HomeOdd, predict(fit3, data.frame(x=data$HomeOdd)), col='red')
lines(subset(data, Bookmaker == "bet365")$HomeOdd, predict(fit3, data.frame(x=data$HomeOdd)), col='red')
plot.new
lines(subset(data, Bookmaker == "bet365")$HomeOdd, predict(fit3, data.frame(x=data$HomeOdd)), col='red')
plot.new()
lines(subset(data, Bookmaker == "bet365")$HomeOdd, predict(fit3, data.frame(x=data$HomeOdd)), col='red')
points(subset(data, Bookmaker == "bet365")$HomeOdd, predict(fit3, data.frame(x=data$HomeOdd)), col='red')
ggplot(dataByGame,
aes(DrawOddMean, HomeOddMean)) +
geom_point(alpha = 1/20) +
geom_smooth(method = 'lm', formula = y~poly(x, 3)) +
facet_wrap(~Season)
ggplot(dataByGame,
aes(DrawOddMean, HomeOddMean)) +
geom_point(alpha = 1/20) +
geom_smooth(method = 'lm', formula = y~poly(x, 3, raw = TRUE)) +
facet_wrap(~Season)
ggplot(dataByGame,
aes(DrawOddMean, HomeOddMean)) +
geom_point(alpha = 1/20) +
geom_smooth(method = 'lm', formula = y~poly(x, 5, raw = TRUE)) +
facet_wrap(~Season)
ggplot(dataByGame,
aes(DrawOddMean, HomeOddMean)) +
geom_point(alpha = 1/20) +
geom_smooth(method = 'lm', formula = y~poly(x, 10, raw = TRUE), color = 'red') +
facet_wrap(~Season)
ggplot(dataByGame,
aes(HomeOddMean, DrawOddMean)) +
geom_point(alpha = 1/20) +
geom_smooth(method = 'lm', formula = y~poly(x, 10, raw = TRUE), color = 'red') +
facet_wrap(~Season)
ggplot(dataByGame,
aes(HomeOddMean, DrawOddMean)) +
geom_point(alpha = 1/20) +
geom_smooth(method = 'lm', formula = y~poly(x, 3, raw = TRUE), color = 'red') +
facet_wrap(~Season)
ggplot(dataByGame,
aes(HomeOddMean, DrawOddMean)) +
geom_point(alpha = 1/20) +
geom_smooth(method = 'lm', formula = y~poly(x, 2, raw = TRUE), color = 'red') +
facet_wrap(~Season)
ggplot(dataByGame,
aes(HomeOddMean, DrawOddMean)) +
geom_point(alpha = 1/20) +
geom_smooth(method = 'lm', formula = y~poly(x, 3, raw = TRUE), color = 'red') +
facet_wrap(~Season)
fit3 <- with(subset(data, Bookmaker == "bet365"), lm(HomeOdd ~ poly(DrawOdd, 3)))
fit3
lines(subset(data, Bookmaker == "bet365")$DrawOdd, predict(fit3, data.frame(x=data$DrawOdd)), col='red')
plot.new()
lines(subset(data, Bookmaker == "bet365")$DrawOdd, predict(fit3, data.frame(x=data$DrawOdd)), col='red')
plot.new()
points(subset(data, Bookmaker == "bet365")$DrawOdd, predict(fit3, data.frame(x=data$DrawOdd)), col='red')
plot.new()
with(subset(data, Bookmaker == "bet365"), points(DrawOdd, predict(fit3, data.frame(x=DrawOdd)), col='red'))
?geom_smooth
ggplot(dataByGame,
aes(HomeOddMean, DrawOddMean)) +
geom_point(alpha = 1/20) +
geom_smooth(method = 'lm', formula = y~0.4707-6.9719*x+1.9847*x^2-1.1438*x^3, color = 'red') +
facet_wrap(~Season)
ggplot(dataByGame,
aes(HomeOddMean, DrawOddMean)) +
geom_point(alpha = 1/20) +
geom_smooth(method = 'lm', formula = y~(0.4707-6.9719*x+1.9847*x^2-1.1438*x^3), color = 'red') +
facet_wrap(~Season)
ggplot(dataByGame,
aes(HomeOddMean, DrawOddMean)) +
geom_point(alpha = 1/20) +
geom_smooth(method = 'lm', formula = y~(0.4707-6.9719*x+1.9847*x^2-1.1438*x^3), color = 'red')
ggplot(data,
aes(HomeOdd, DrawOdd)) +
geom_point(alpha = 1/20) +
geom_smooth(method = 'lm', formula = y~(0.4707-6.9719*x+1.9847*x^2-1.1438*x^3), color = 'red')
x <- seq(0, 1, 100)
y <- (0.4707-6.9719*x+1.9847*x^2-1.1438*x^3)
x <- seq(0, 1, 0.01)
y <- (0.4707-6.9719*x+1.9847*x^2-1.1438*x^3)
plot(x, y, type = 'l', col = 'red')
plot(x, y, type = 'l', col = 'red', lwd = 3)
lines(x, y)
plot.new()
lines(x, y)
plot(x, y, type = 'l', col = 'red', lwd = 3)
y <- 0.4707 - 6.9719 * x + 1.9847 * (x^2) - 1.1438 * (x^3)
?lm
fit3 <- with(subset(data, Bookmaker == "bet365"), lm(HomeOdd ~ poly(DrawOdd, 3)))
fit3
fit3$residuals
confint(fit3)
plot(fitted(fit3),residuals(fit3))
fit3 <- with(subset(data, Bookmaker == "bet365"), lm(HomeOdd ~ poly(DrawOdd, 3, raw = TRUE)))
plot(fitted(fit3),residuals(fit3))
plot(fitted(fit3),residuals(fit3))
confint(fit3)
?poly
